/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.examenmarzopspro;

import Clases.Notas;
import DAO.DAOAlumnos;
import Excepciones.ExcepcionDNIDuplicado;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dam
 */
public class principal extends javax.swing.JFrame {
    DAOAlumnos daoalumnos = new DAOAlumnos();

    /**
     * Creates new form principal
     */
    public principal() {
        initComponents();
        cargarTablaAlumnos();
        botonMedia.setText("Calcular Nota Media");
        botonMedia.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            botonMediaActionPerformed(evt);
        }
});

    }
    
    public void cargarTablaAlumnos(){
        try{
            ResultSet resultset = daoalumnos.getAlumnos();

        DefaultTableModel modelo=new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("DNI");
        
        Object[] registroLeido = new Object[3];
        while(resultset.next()) {
            registroLeido[0] = resultset.getInt("idalumno");
            registroLeido[1] = resultset.getString("nombre");
            registroLeido[2] = resultset.getString("dni");
                        
            modelo.addRow(registroLeido);
        }
        tablaAlumnos.setModel(modelo);
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlumnos = new javax.swing.JTable();
        botonInsertarAlumno = new javax.swing.JButton();
        buttonModificar = new javax.swing.JButton();
        botonMedia = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaNotas = new javax.swing.JTable();
        botonNotas = new javax.swing.JButton();
        textIDAlumno = new javax.swing.JTextField();
        textNombre = new javax.swing.JTextField();
        textDni = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAlumnosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaAlumnos);

        botonInsertarAlumno.setText("Insertar Alumno");
        botonInsertarAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInsertarAlumnoActionPerformed(evt);
            }
        });

        buttonModificar.setText("Modificar Alumno");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        botonMedia.setText("Boton Media");
        botonMedia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMediaActionPerformed(evt);
            }
        });

        tablaNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaNotas);

        botonNotas.setText("Boton Notas");
        botonNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNotasActionPerformed(evt);
            }
        });

        jLabel1.setText("ID ALUMNO: ");

        jLabel2.setText("NOMBRE: ");

        jLabel3.setText("DNI: ");

        jLabel4.setText("EXAMEN MARZO PSPRO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
                        .addComponent(jScrollPane1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonInsertarAlumno)
                            .addComponent(buttonModificar)
                            .addComponent(botonMedia)
                            .addComponent(botonNotas)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(jLabel1)
                                .addGap(37, 37, 37))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(49, 49, 49))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(58, 58, 58)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textIDAlumno, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addComponent(textNombre)
                            .addComponent(textDni))))
                .addContainerGap(191, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel4)
                        .addGap(79, 79, 79)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textIDAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(60, 60, 60)
                        .addComponent(botonInsertarAlumno)
                        .addGap(18, 18, 18)
                        .addComponent(buttonModificar)
                        .addGap(18, 18, 18)
                        .addComponent(botonMedia)
                        .addGap(18, 18, 18)
                        .addComponent(botonNotas)))
                .addContainerGap(124, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAlumnosMouseClicked
        int filaSeleccionada = tablaAlumnos.getSelectedRow();
        if (filaSeleccionada != -1) {
            int idAlumno = Integer.parseInt(tablaAlumnos.getValueAt(filaSeleccionada, 0).toString());

            try {
                ResultSet resulsetNotas = daoalumnos.getNotasAlumnos(idAlumno);

                DefaultTableModel modeloNotas = new DefaultTableModel();
                modeloNotas.addColumn("ID NOTAS");
                modeloNotas.addColumn("DNI");
                modeloNotas.addColumn("ASIGNATURA");
                modeloNotas.addColumn("NOTA");
                modeloNotas.addColumn("ID ALUMNO");

                while (resulsetNotas.next()) {
                    Object[] fila = new Object[5];
                    fila[0] = resulsetNotas.getInt("idnotas");
                    fila[1] = resulsetNotas.getString("dni");
                    fila[2] = resulsetNotas.getString("asignatura");
                    fila[3] = resulsetNotas.getFloat("nota");
                    fila[4] = resulsetNotas.getInt("idalumno");

                    modeloNotas.addRow(fila);
                }

                tablaNotas.setModel(modeloNotas);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error al cargar los datos de las notas", "Error", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_tablaAlumnosMouseClicked

    private void botonInsertarAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInsertarAlumnoActionPerformed
        String dnidup = textDni.getText();
    String idAlumno = textIDAlumno.getText();
    try {
        if(daoalumnos.existeDNI(dnidup)) {
            throw new ExcepcionDNIDuplicado();
        } else {
            int id = Integer.parseInt(idAlumno);
            String nombre = textNombre.getText();
            String dni = textDni.getText();
            daoalumnos.insertarAlumno(id, nombre, dni);
            cargarTablaAlumnos();
            limpiarTexts();
        }
    } catch (ExcepcionDNIDuplicado ex) {
        JOptionPane.showMessageDialog(this, ex.getMessage());
    }
    }//GEN-LAST:event_botonInsertarAlumnoActionPerformed

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        int filaSeleccionada = tablaAlumnos.getSelectedRow();
    if (filaSeleccionada != -1) {
        try {
            int idAnterior = Integer.parseInt(tablaAlumnos.getValueAt(filaSeleccionada, 0).toString());
            int nuevoId = Integer.parseInt(textIDAlumno.getText());
            String nombre = textNombre.getText();
            String dni = textDni.getText();

           
            int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que deseas modificar este alumno? Los cambios son definitivos.", "Confirmación", JOptionPane.YES_NO_OPTION);
            if (confirmacion == JOptionPane.YES_OPTION) {
               
                if (daoalumnos.existeDNI(dni)) {
                    JOptionPane.showMessageDialog(this, "El DNI ingresado ya está en uso por otro alumno.", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    daoalumnos.modificarAlumno(idAnterior, nuevoId, nombre, dni);
                    cargarTablaAlumnos();
                    limpiarTexts();
                }
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "El ID del alumno debe ser un número entero válido.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona un alumno para modificar.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void botonMediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMediaActionPerformed
        int filaSeleccionada = tablaAlumnos.getSelectedRow();
        if (filaSeleccionada != -1) {
            String idAlumnoo = tablaAlumnos.getValueAt(filaSeleccionada, 0).toString();
            int idAlumno = Integer.parseInt(idAlumnoo);
            ResultSet resultSet = daoalumnos.getNotasAlumnosById(idAlumno);

        
        float sumaNotas = 0;
        int cantidadNotas = 0;
        try {
            while (resultSet.next()) {
                float nota = resultSet.getFloat("nota");
                sumaNotas += nota;
                cantidadNotas++;
            }
            if (cantidadNotas > 0) {
                float media = sumaNotas / cantidadNotas;
                JOptionPane.showMessageDialog(this, "La nota media es: " + media, "Nota Media", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "El alumno no tiene notas.", "Nota Media", JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al calcular la nota media", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un alumno para calcular su nota media.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonMediaActionPerformed

    private void botonNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNotasActionPerformed
        notas notas = new notas();
        notas.show();
    }//GEN-LAST:event_botonNotasActionPerformed

    public void limpiarTexts(){
        textIDAlumno.setText("");
        textDni.setText("");
        textNombre.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonInsertarAlumno;
    private javax.swing.JButton botonMedia;
    private javax.swing.JButton botonNotas;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaAlumnos;
    private javax.swing.JTable tablaNotas;
    private javax.swing.JTextField textDni;
    private javax.swing.JTextField textIDAlumno;
    private javax.swing.JTextField textNombre;
    // End of variables declaration//GEN-END:variables
}
